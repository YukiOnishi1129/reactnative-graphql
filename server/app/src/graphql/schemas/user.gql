extend type Query {
  me: User!
  allUsers: [User!]!
}

"""
input
"""
input LoginInput {
  email: String!
  password: String!
}

input RegisterInput {
  name: String!
  email: String!
  password: String!
}

input AuthInput {
  token: String!
}

extend type Mutation {
  login(input: LoginInput!): AuthenticateResponse!
  register(input: RegisterInput!): AuthenticateResponse!
  authentication(input: AuthInput!): AuthenticateResponse!
}

"""
User
"""
type User {
  id: Int!
  name: String!
  email: String!
  avatar: String!
  createdAt: DateTime!
}

type AuthenticateResponse {
  user: User!
  token: String!
}
